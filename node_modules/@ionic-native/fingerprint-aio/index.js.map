{"version":3,"sources":["../../../src/@ionic-native/plugins/fingerprint-aio/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AA8BxE;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AASH,IAAa,cAAc;IAAS,kCAAiB;IAArD;;IAuBA,CAAC;IArBC;;;OAGG;IAEH,oCAAW,GAAX,cAA8B,MAAM,CAAC,CAAC,CAAC;IAEvC;;;;OAIG;IAEH,6BAAI,GAAJ,UAAK,OAA2B,IAAkB,MAAM,CAAC,CAAC,CAAC;IAQ7D,qBAAC;AAAD,CAvBA,AAuBC,CAvBmC,iBAAiB,GAuBpD;AANM,yBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAfA;IADC,OAAO,EAAE;;;;iDAC6B;AAQvC;IADC,OAAO,EAAE;;;;0CACiD;AAfhD,cAAc;IAR1B,MAAM,CAAC;QACN,UAAU,EAAE,gBAAgB;QAC5B,MAAM,EAAE,gCAAgC;QACxC,SAAS,EAAE,aAAa;QACxB,IAAI,EAAE,8DAA8D;QACpE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,cAAc,CAuB1B;SAvBY,cAAc","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n\r\n\r\nexport interface FingerprintOptions {\r\n  /**\r\n   * Key for platform keychain\r\n   */\r\n  clientId: string;\r\n\r\n  /**\r\n   * Secret password. Only for android\r\n   */\r\n  clientSecret?: string;\r\n\r\n  /**\r\n   * Disable 'use backup' option. Only for android (optional)\r\n   */\r\n  disableBackup?: boolean;\r\n\r\n  /**\r\n   * Title of fallback button. Only for iOS\r\n   */\r\n  localizedFallbackTitle?: string;\r\n\r\n  /**\r\n   * Description in authentication dialogue. Only for iOS\r\n   */\r\n  localizedReason?: string;\r\n}\r\n\r\n/**\r\n * @name Fingerprint AIO\r\n * @description\r\n * Use simple fingerprint authentication on Android and iOS.\r\n * Requires Cordova plugin: cordova-plugin-fingerprint-aio. For more info about plugin, vist: https://github.com/NiklasMerz/cordova-plugin-fingerprint-aio\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { FingerprintAIO } from '@ionic-native/fingerprint-aio';\r\n *\r\n * constructor(private faio: FingerprintAIO) { }\r\n *\r\n * ...\r\n *\r\n * this.faio.show({\r\n *     clientId: 'Fingerprint-Demo',\r\n *     clientSecret: 'password', //Only necessary for Android\r\n *     disableBackup:true,  //Only for Android(optional)\r\n *     localizedFallbackTitle: 'Use Pin', //Only for iOS\r\n *     localizedReason: 'Please authenticate' //Only for iOS\r\n * })\r\n * .then((result: any) => console.log(result))\r\n * .catch((error: any) => console.log(error));\r\n *\r\n * ```\r\n * @interfaces\r\n * FingerprintOptions\r\n */\r\n@Plugin({\r\n  pluginName: 'FingerprintAIO',\r\n  plugin: 'cordova-plugin-fingerprint-aio',\r\n  pluginRef: 'Fingerprint',\r\n  repo: 'https://github.com/NiklasMerz/cordova-plugin-fingerprint-aio',\r\n  platforms: ['Android', 'iOS']\r\n})\r\n\r\nexport class FingerprintAIO extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Check if fingerprint authentication is available\r\n   * @return {Promise<any>} Returns a promise with result\r\n   */\r\n  @Cordova()\r\n  isAvailable(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Show authentication dialogue\r\n   * @param options {FingerprintOptions} options for platform specific fingerprint API\r\n   * @return {Promise<any>} Returns a promise that resolves when authentication was successfull\r\n   */\r\n  @Cordova()\r\n  show(options: FingerprintOptions): Promise<any> { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}